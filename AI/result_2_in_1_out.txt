{
Run Input : 0
weight 1 : -0.400000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : 0.200000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.400000
weight 2 : ¡@0.200000
Run Input : 1
weight 1 : -0.400000, input 1 : 1.000000, output 1 : -0.400000
weight 2 : 0.200000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.400000
weight 2 : ¡@0.200000
Run Input : 2
weight 1 : -0.400000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : 0.200000, input 2 : 1.000000, output 2 : 0.200000
Neuron : 1.000000
Answer : 0.000000
Error : -1.000000
weight 1 : -0.400000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : -0.400000, input 1 : 1.000000, output 1 : -0.400000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : -0.300000
weight 2 : ¡@0.200000

weight 0 : -0.400000 -> -0.300000(+0.100000)
weight 0 : 0.200000
}
{
Run Input : 0
weight 1 : -0.100000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.300000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : -0.300000
Run Input : 1
weight 1 : -0.100000, input 1 : 1.000000, output 1 : -0.100000
weight 2 : -0.300000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : -0.300000
Run Input : 2
weight 1 : -0.100000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.300000, input 2 : 1.000000, output 2 : -0.300000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : -0.300000
Run Input : 3
weight 1 : -0.100000, input 1 : 1.000000, output 1 : -0.100000
weight 2 : -0.300000, input 2 : 1.000000, output 2 : -0.300000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : ¡@0.000000
weight 2 : -0.200000

weight output 0 : -0.100000 -> 0.000000(+0.100000)
weight output 1 : -0.300000 -> -0.200000(+0.100000)
}
{
Run Input : 0
weight 1 : -0.200000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.200000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.200000
weight 2 : -0.200000
Run Input : 1
weight 1 : -0.200000, input 1 : 1.000000, output 1 : -0.200000
weight 2 : -0.200000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.200000
weight 2 : -0.200000
Run Input : 2
weight 1 : -0.200000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.200000, input 2 : 1.000000, output 2 : -0.200000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.200000
weight 2 : -0.200000
Run Input : 3
weight 1 : -0.200000, input 1 : 1.000000, output 1 : -0.200000
weight 2 : -0.200000, input 2 : 1.000000, output 2 : -0.200000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : -0.100000
weight 2 : -0.100000

weight output 0 : -0.200000 -> -0.100000(+0.100000)
weight output 1 : -0.200000 -> -0.100000(+0.100000)
}
{
Run Input : 0
weight 1 : -0.100000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.100000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : -0.100000
Run Input : 1
weight 1 : -0.100000, input 1 : 1.000000, output 1 : -0.100000
weight 2 : -0.100000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : -0.100000
Run Input : 2
weight 1 : -0.100000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.100000, input 2 : 1.000000, output 2 : -0.100000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : -0.100000
Run Input : 3
weight 1 : -0.100000, input 1 : 1.000000, output 1 : -0.100000
weight 2 : -0.100000, input 2 : 1.000000, output 2 : -0.100000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.000000

weight output 0 : -0.100000 -> 0.000000(+0.100000)
weight output 1 : -0.100000 -> 0.000000(+0.100000)
}
{
Run Input : 0
weight 1 : 0.000000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.000000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.000000
Run Input : 1
weight 1 : 0.000000, input 1 : 1.000000, output 1 : 0.000000
weight 2 : 0.000000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.000000
Run Input : 2
weight 1 : 0.000000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.000000, input 2 : 1.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.000000
Run Input : 3
weight 1 : 0.000000, input 1 : 1.000000, output 1 : 0.000000
weight 2 : 0.000000, input 2 : 1.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000

weight output 0 : 0.000000 -> 0.100000(+0.100000)
weight output 1 : 0.000000 -> 0.100000(+0.100000)
}
{
Run Input : 0
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 1
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 2
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 1.000000
Answer : 1.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000

weight output 0 : 0.100000
weight output 1 : 0.100000
}
{
Run Input : 0
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 1
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 2
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 1.000000
Answer : 1.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000

weight output 0 : 0.100000
weight output 1 : 0.100000
}
{
Run Input : 0
weight 1 : -0.200000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.000000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.200000
weight 2 : ¡@0.000000
Run Input : 1
weight 1 : -0.200000, input 1 : 1.000000, output 1 : -0.200000
weight 2 : -0.000000, input 2 : 0.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.200000
weight 2 : ¡@0.000000
Run Input : 2
weight 1 : -0.200000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : -0.000000, input 2 : 1.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.200000
weight 2 : ¡@0.000000
Run Input : 3
weight 1 : -0.200000, input 1 : 1.000000, output 1 : -0.200000
weight 2 : -0.000000, input 2 : 1.000000, output 2 : -0.000000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : -0.100000
weight 2 : ¡@0.100000

weight output 0 : -0.200000 -> -0.100000(+0.100000)
weight output 1 : -0.000000 -> 0.100000(+0.100000)
}
{
Run Input : 0
weight 1 : -0.100000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : ¡@0.100000
Run Input : 1
weight 1 : -0.100000, input 1 : 1.000000, output 1 : -0.100000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : ¡@0.100000
Run Input : 2
weight 1 : -0.100000, input 1 : 0.000000, output 1 : -0.000000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : -0.100000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : -0.100000, input 1 : 1.000000, output 1 : -0.100000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.200000

weight output 0 : -0.100000 -> 0.000000(+0.100000)
weight output 1 : 0.100000 -> 0.200000(+0.100000)
}
{
Run Input : 0
weight 1 : 0.000000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.200000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.200000
Run Input : 1
weight 1 : 0.000000, input 1 : 1.000000, output 1 : 0.000000
weight 2 : 0.200000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.200000
Run Input : 2
weight 1 : 0.000000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.200000, input 2 : 1.000000, output 2 : 0.200000
Neuron : 1.000000
Answer : 0.000000
Error : -1.000000
weight 1 : ¡@0.000000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : 0.000000, input 1 : 1.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 1.000000
Error : +1.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.200000

weight output 0 : 0.000000 -> 0.100000(+0.100000)
weight output 1 : 0.200000
}
{
Run Input : 0
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.200000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.200000
Run Input : 1
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.200000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.200000
Run Input : 2
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.200000, input 2 : 1.000000, output 2 : 0.200000
Neuron : 1.000000
Answer : 0.000000
Error : -1.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 1.000000
Answer : 1.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000

weight output 0 : 0.100000
weight output 1 : 0.200000 -> 0.100000(-0.100000)
}
{
Run Input : 0
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 1
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 2
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 1.000000
Answer : 1.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000

weight output 0 : 0.100000
weight output 1 : 0.100000
}
{
Run Input : 0
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 1
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 0.000000, output 2 : 0.000000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 2
weight 1 : 0.100000, input 1 : 0.000000, output 1 : 0.000000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 0.000000
Answer : 0.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000
Run Input : 3
weight 1 : 0.100000, input 1 : 1.000000, output 1 : 0.100000
weight 2 : 0.100000, input 2 : 1.000000, output 2 : 0.100000
Neuron : 1.000000
Answer : 1.000000
Error : +0.000000
weight 1 : ¡@0.100000
weight 2 : ¡@0.100000

weight output 0 : 0.100000
weight output 1 : 0.100000
}
